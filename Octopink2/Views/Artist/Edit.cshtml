@model Octopink2.Models.Artist

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center pt-2">Modifica</h2>


@using (Html.BeginForm("Edit", "Artist", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal p-2">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ArtistID)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Aka, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Aka, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Aka, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.InstaLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InstaLink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InstaLink, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <h6 class="fw-bold mt-2 mb-2">Carica nuova immagine principale</h6>
        <input type="file" name="file" class="form-control" />
    </div>

    @if (!string.IsNullOrEmpty(Model.Foto1))
    {
        <div class="form-group mt-2 mb-2">
            <label class="fw-bold">Immagini attuali: </label>
            <img src="@Model.Foto1" alt="Immagine attuale" class="ms-3" width="100" />
            <img src="@Model.Foto2" alt="Immagine attuale" class="ms-3" width="100" />
            <img src="@Model.Foto3" alt="Immagine attuale" class="ms-3" width="100" />
            <img src="@Model.Foto4" alt="Immagine attuale" class="ms-3" width="100" />
            <img src="@Model.Foto5" alt="Immagine attuale" class="ms-3" width="100" />
           
        </div>
    }

<div class="form-group">
    <h6 class="fw-bold mt-2 mb-2">Carica nuove immagini aggiuntive</h6>
    <p>Foto 2</p>
    <input type="file" name="file2" class="form-control" />
    <p>Foto 3</p>
    <input type="file" name="file3" class="form-control" />
    <p>Foto 4</p>
    <input type="file" name="file4" class="form-control" />
    <p>Foto 5</p>
    <input type="file" name="file5" class="form-control" />
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Modifica" class="btn btn-secondary rounded-3 ms-3 mt-2" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Torna indietro", "Index", new { }, new {@class="btn btn-light rounded-3 ms-3"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
